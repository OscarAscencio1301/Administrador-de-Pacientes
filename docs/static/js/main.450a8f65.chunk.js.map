{"version":3,"sources":["types/types.js","reducer/pacienteReducer.js","components/Footer.js","components/FormularioPaciente.js","hooks/useForm.js","actions/pacientes.js","components/PacienteInd.js","components/Pacientes.js","components/DatosPaciente.js","store/sotre.js","App.js","index.js"],"names":["types","agregarPaciente","borrarPaciente","editarPaciente","activarPaciente","limpiarPaciente","init","pacientes","JSON","parse","localStorage","getItem","pacienteActivo","pacienteReducer","state","action","type","payload","filter","paciente","id","map","Footer","className","FormularioPaciente","dispatch","useDispatch","useSelector","console","log","valoresIniciales","useState","valores","setvalores","cambioInput","e","target","name","value","reset","useForm","dueño","mascota","fecha","hora","sintomas","useEffect","validar","trim","length","Swal","fire","title","icon","onSubmit","preventDefault","Date","now","placeholder","onChange","PacienteInd","onClick","Pacientes","setItem","stringify","DatosPaciente","require","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.450a8f65.chunk.js","sourcesContent":["export const types = {\r\n    // Tipos\r\n    agregarPaciente: '[paciente] Agregar',\r\n    borrarPaciente: '[paciente] Borrar',\r\n    editarPaciente: '[paciente] Editar',\r\n    activarPaciente: '[paciente] Activar',\r\n    limpiarPaciente: '[paciente] Limpieza',\r\n}","import { types } from \"../types/types\"\r\n\r\nconst init = ()  => {\r\n    return {\r\n        pacientes: JSON.parse(localStorage.getItem('citas')) || [],\r\n        pacienteActivo: null\r\n    }\r\n}\r\n\r\nexport const pacienteReducer = (state = init(), action) => {\r\n    switch (action.type) {\r\n        case types.agregarPaciente:\r\n            return {\r\n                ...state,\r\n                pacientes: [...state.pacientes, action.payload]\r\n            }\r\n        case types.borrarPaciente:\r\n            return {\r\n                ...state,\r\n                pacientes: state.pacientes.filter(paciente => paciente.id !== action.payload)\r\n            }\r\n\r\n        case types.editarPaciente:\r\n            return {\r\n                ...state,\r\n                pacientes: state.pacientes.map(paciente => paciente.id === action.payload.id ? action.payload : paciente)\r\n            }\r\n        case types.activarPaciente:\r\n            return {\r\n                ...state,\r\n                pacienteActivo: action.payload\r\n            }\r\n        case types.limpiarPaciente:\r\n            return {\r\n                ...state,\r\n                pacienteActivo: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React from 'react'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <div>\r\n            <h4 className=\"footer\">Creado por: Oscar Ascencio</h4>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Swal from 'sweetalert2'\r\nimport { agregarPaciente, editarPaciente, limpiarPaciente } from '../actions/pacientes'\r\nimport { useForm } from '../hooks/useForm'\r\n\r\nexport const FormularioPaciente = () => {\r\n    const dispatch = useDispatch()\r\n    const { pacienteActivo } = useSelector(state => state.paciente)\r\n    console.log(pacienteActivo)\r\n    const [valores, setvalores, cambioInput, reset] = useForm({\r\n        dueño: '',\r\n        mascota: '',\r\n        fecha: '2021-08-12',\r\n        hora: '02:28',\r\n        sintomas: ''\r\n    })\r\n    useEffect(()=> {\r\n        if(pacienteActivo){\r\n            setvalores(pacienteActivo)\r\n        }else{\r\n            setvalores({\r\n                dueño: '',\r\n                mascota: '',\r\n                fecha: '',\r\n                hora: '',\r\n                sintomas: ''\r\n            })\r\n        }\r\n\r\n    }, [pacienteActivo, setvalores])\r\n    const enviarFormulario = (e) => {\r\n        e.preventDefault();\r\n        if (validar()) {\r\n            if (pacienteActivo) {\r\n                Swal.fire({\r\n                    title: 'Paciente Editado',\r\n                    icon: 'success'\r\n                })\r\n                dispatch(editarPaciente(valores))\r\n            } else {\r\n                Swal.fire({\r\n                    title: 'Paciente Creado',\r\n                    icon: 'success'\r\n                })\r\n                valores.id = Date.now()\r\n                dispatch(agregarPaciente(valores))\r\n            }\r\n            reset();\r\n            dispatch(limpiarPaciente());\r\n\r\n        }\r\n    }\r\n    const validar = () => {\r\n        if (dueño.trim().length < 5) {\r\n            Swal.fire({\r\n                title: 'Colocar el nombre del dueño',\r\n                icon: 'error'\r\n            })\r\n            return false;\r\n        }\r\n        if (mascota.trim().length < 2) {\r\n            Swal.fire({\r\n                title: 'Colocar el nombre de la mascota',\r\n                icon: 'error'\r\n            })\r\n            return false;\r\n        }\r\n        return true\r\n    }\r\n\r\n    const { dueño, mascota, fecha, hora, sintomas } = valores\r\n    return (\r\n        <div className=\"formulario\">\r\n            <h1 className=\"titulo\">Crear Cita</h1>\r\n            <form className=\"formulario__container\" onSubmit={enviarFormulario}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Nombre del Dueño\"\r\n                    name=\"dueño\"\r\n                    className=\"formulario__input\"\r\n                    value={dueño}\r\n                    onChange={cambioInput}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Nombre de la Mascota\"\r\n                    name=\"mascota\"\r\n                    className=\"formulario__input\"\r\n                    value={mascota}\r\n                    onChange={cambioInput}\r\n                />\r\n                <input\r\n                    type=\"date\"\r\n                    name=\"fecha\"\r\n                    className=\"formulario__input\"\r\n                    value={fecha}\r\n                    onChange={cambioInput}\r\n                />\r\n                <input\r\n                    type=\"time\"\r\n                    name=\"hora\"\r\n                    className=\"formulario__input\"\r\n                    value={hora}\r\n                    onChange={cambioInput}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Sintomas\"\r\n                    name=\"sintomas\"\r\n                    className=\"formulario__input\"\r\n                    value={sintomas}\r\n                    onChange={cambioInput}\r\n                />\r\n                <button className=\"boton_enviar\" type=\"submit\">{pacienteActivo ? 'Guardar Cambios' : 'Agregar Cita'}</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react'\r\n\r\nexport const useForm = (valoresIniciales = {}) => {\r\n  const [valores, setvalores] = useState(valoresIniciales);\r\n\r\n    const cambioInput = (e) => {\r\n        setvalores({\r\n            ...valores,\r\n            [e.target.name]: e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    const reset = () => {\r\n        setvalores(valoresIniciales)\r\n    }\r\n    return [valores, setvalores, cambioInput, reset]\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const agregarPaciente = (paciente) => ({\r\n    type: types.agregarPaciente,\r\n    payload: paciente\r\n})\r\n\r\n\r\nexport const borrarPaciente = (id) => ({\r\n    type: types.borrarPaciente,\r\n    payload: id\r\n})\r\n\r\n\r\nexport const editarPaciente = (paciente) => ({\r\n    type: types.editarPaciente,\r\n    payload: paciente\r\n})\r\n\r\nexport const activarPaciente = (paciente) => ({\r\n    type: types.activarPaciente,\r\n    payload: paciente\r\n})\r\n\r\nexport const limpiarPaciente = () => ({\r\n    type: types.limpiarPaciente,\r\n\r\n})","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { activarPaciente, borrarPaciente } from '../actions/pacientes'\r\n\r\nexport const PacienteInd = ({paciente}) => {\r\n    const dispatch = useDispatch()\r\n    const {id, dueño,mascota,fecha,hora,sintomas} = paciente\r\n\r\n    const borrarPacienteBTN = () => {\r\n        dispatch(borrarPaciente(id))\r\n    }\r\n\r\n    const editarPacienteBTN = () => {\r\n        dispatch(activarPaciente(paciente))\r\n    }\r\n    return (\r\n        <div className=\"paciente__contenedor\">\r\n            <h2>{mascota}</h2>\r\n            <h3>{dueño}</h3>\r\n            <p>{fecha}</p>\r\n            <p>{hora}</p>\r\n            <p>{sintomas}</p>\r\n            <button className=\"paciente__borrar\" onClick={borrarPacienteBTN}>Borrar</button>\r\n            <button className=\"paciente__editar\" onClick={editarPacienteBTN}>Editar</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { PacienteInd } from './PacienteInd'\r\n\r\nexport const Pacientes = () => {\r\n    const {pacientes} = useSelector(state => state.paciente)\r\n        // LocalStorage\r\n        useEffect(() => {\r\n            localStorage.setItem('citas', JSON.stringify(pacientes))\r\n        }, [pacientes])\r\n\r\n  \r\n\r\n        \r\n    return (\r\n        <div className=\"listado\">\r\n            <h1 className=\"titulo\">{pacientes.length > 0 ? 'Citas' : 'No hay Citas'}</h1>\r\n            {\r\n                pacientes.map(paciente => <PacienteInd paciente={paciente} key={paciente.id}/>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Footer } from './Footer'\r\nimport { FormularioPaciente } from './FormularioPaciente'\r\nimport { Pacientes } from './Pacientes'\r\n\r\nexport const DatosPaciente = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"titulo\">Administrador de Pacientes</h1>\r\n            <div className=\"container\">\r\n                <FormularioPaciente />\r\n                <Pacientes />\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n","const { combineReducers, createStore } = require(\"redux\");\r\nconst { pacienteReducer } = require(\"../reducer/pacienteReducer\");\r\n\r\nconst reducers = combineReducers({\r\n    paciente: pacienteReducer\r\n})\r\n\r\n\r\nexport const store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { DatosPaciente } from './components/DatosPaciente'\r\nimport { store } from './store/sotre'\r\n\r\nexport const App = () => {\r\n\r\n    \r\n   \r\n\r\n\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <DatosPaciente />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './styles/style.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}